/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __MAIN_BPF_SKEL_H__
#define __MAIN_BPF_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct main_bpf {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *events;
	} maps;
	struct {
		struct bpf_program *tracepoint_demo;
	} progs;
	struct {
		struct bpf_link *tracepoint_demo;
	} links;

#ifdef __cplusplus
	static inline struct main_bpf *open(const struct bpf_object_open_opts *opts = nullptr);
	static inline struct main_bpf *open_and_load();
	static inline int load(struct main_bpf *skel);
	static inline int attach(struct main_bpf *skel);
	static inline void detach(struct main_bpf *skel);
	static inline void destroy(struct main_bpf *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif /* __cplusplus */
};

static void
main_bpf__destroy(struct main_bpf *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
main_bpf__create_skeleton(struct main_bpf *obj);

static inline struct main_bpf *
main_bpf__open_opts(const struct bpf_object_open_opts *opts)
{
	struct main_bpf *obj;
	int err;

	obj = (struct main_bpf *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = main_bpf__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	main_bpf__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct main_bpf *
main_bpf__open(void)
{
	return main_bpf__open_opts(NULL);
}

static inline int
main_bpf__load(struct main_bpf *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct main_bpf *
main_bpf__open_and_load(void)
{
	struct main_bpf *obj;
	int err;

	obj = main_bpf__open();
	if (!obj)
		return NULL;
	err = main_bpf__load(obj);
	if (err) {
		main_bpf__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
main_bpf__attach(struct main_bpf *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
main_bpf__detach(struct main_bpf *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *main_bpf__elf_bytes(size_t *sz);

static inline int
main_bpf__create_skeleton(struct main_bpf *obj)
{
	struct bpf_object_skeleton *s;
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)	{
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "main_bpf";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 1;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	s->maps[0].name = "events";
	s->maps[0].map = &obj->maps.events;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "tracepoint_demo";
	s->progs[0].prog = &obj->progs.tracepoint_demo;
	s->progs[0].link = &obj->links.tracepoint_demo;

	s->data = (void *)main_bpf__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *main_bpf__elf_bytes(size_t *sz)
{
	*sz = 7640;
	return (const void *)"\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x18\x17\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x1b\0\
\x01\0\xbf\x17\0\0\0\0\0\0\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb7\x02\0\0\xc4\
\0\0\0\xb7\x03\0\0\0\0\0\0\x85\0\0\0\x83\0\0\0\xbf\x06\0\0\0\0\0\0\x15\x06\x12\
\0\0\0\0\0\x61\x71\x08\0\0\0\0\0\x57\x01\0\0\xff\xff\0\0\x0f\x17\0\0\0\0\0\0\
\xbf\x61\0\0\0\0\0\0\x07\x01\0\0\x04\0\0\0\xb7\x02\0\0\x80\0\0\0\xbf\x73\0\0\0\
\0\0\0\x85\0\0\0\x71\0\0\0\x85\0\0\0\x0e\0\0\0\x77\0\0\0\x20\0\0\0\x63\x06\0\0\
\0\0\0\0\xbf\x61\0\0\0\0\0\0\x07\x01\0\0\x84\0\0\0\xb7\x02\0\0\x40\0\0\0\x85\0\
\0\0\x10\0\0\0\xbf\x61\0\0\0\0\0\0\xb7\x02\0\0\0\0\0\0\x85\0\0\0\x84\0\0\0\xb7\
\0\0\0\0\0\0\0\x95\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x47\x50\x4c\0\
\x2d\0\0\0\x05\0\x08\0\x03\0\0\0\x0c\0\0\0\x17\0\0\0\x1e\0\0\0\x04\0\x08\x01\
\x51\x04\x08\x58\x01\x57\0\x04\x38\xe0\x01\x01\x56\0\x04\x58\xd0\x01\x01\x57\0\
\x01\x11\x01\x25\x25\x13\x05\x03\x25\x72\x17\x10\x17\x1b\x25\x11\x1b\x12\x06\
\x73\x17\x8c\x01\x17\0\0\x02\x34\0\x03\x25\x49\x13\x3f\x19\x3a\x0b\x3b\x0b\x02\
\x18\0\0\x03\x01\x01\x49\x13\0\0\x04\x21\0\x49\x13\x37\x0b\0\0\x05\x24\0\x03\
\x25\x3e\x0b\x0b\x0b\0\0\x06\x24\0\x03\x25\x0b\x0b\x3e\x0b\0\0\x07\x13\x01\x0b\
\x0b\x3a\x0b\x3b\x0b\0\0\x08\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\x38\x0b\0\0\
\x09\x0f\0\x49\x13\0\0\x0a\x21\0\x49\x13\x37\x06\0\0\x0b\x34\0\x03\x25\x49\x13\
\x3a\x0b\x3b\x05\0\0\x0c\x15\x01\x49\x13\x27\x19\0\0\x0d\x05\0\x49\x13\0\0\x0e\
\x0f\0\0\0\x0f\x16\0\x49\x13\x03\x25\x3a\x0b\x3b\x0b\0\0\x10\x26\0\0\0\x11\x15\
\0\x49\x13\x27\x19\0\0\x12\x15\x01\x27\x19\0\0\x13\x2e\x01\x11\x1b\x12\x06\x40\
\x18\x7a\x19\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x3f\x19\0\0\x14\x05\0\x02\
\x22\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x15\x34\0\x02\x22\x03\x25\x3a\x0b\x3b\
\x0b\x49\x13\0\0\x16\x34\0\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x17\x13\x01\x03\
\x25\x0b\x0b\x3a\x0b\x3b\x05\0\0\x18\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x05\x38\
\x0b\0\0\x19\x13\x01\x03\x25\x0b\x0b\x3a\x0b\x3b\x0b\0\0\0\x51\x02\0\0\x05\0\
\x01\x08\0\0\0\0\x01\0\x0c\0\x01\x08\0\0\0\0\0\0\0\x02\x02\xe0\0\0\0\x08\0\0\0\
\x0c\0\0\0\x02\x03\x32\0\0\0\0\x4c\x02\xa1\0\x03\x3e\0\0\0\x04\x42\0\0\0\x04\0\
\x05\x04\x06\x01\x06\x05\x08\x07\x02\x06\x51\0\0\0\0\x0f\x02\xa1\x01\x07\x10\0\
\x0c\x08\x07\x68\0\0\0\0\x0d\0\x08\x09\x7d\0\0\0\0\x0e\x08\0\x09\x6d\0\0\0\x03\
\x79\0\0\0\x04\x42\0\0\0\x1b\0\x05\x08\x05\x04\x09\x82\0\0\0\x03\x79\0\0\0\x0a\
\x42\0\0\0\0\0\x04\0\0\x0b\x0a\x9a\0\0\0\x02\x56\x0c\x09\x9f\0\0\0\x0c\xb4\0\0\
\0\x0d\xb4\0\0\0\x0d\xb5\0\0\0\x0d\xb5\0\0\0\0\x0e\x0f\xbd\0\0\0\x0c\x01\x16\
\x05\x0b\x07\x08\x0b\x0d\xca\0\0\0\x02\xe2\x0a\x09\xcf\0\0\0\x0c\xe4\0\0\0\x0d\
\xb4\0\0\0\x0d\xe8\0\0\0\x0d\xf4\0\0\0\0\x05\x0e\x05\x08\x0f\xf0\0\0\0\x10\x01\
\x12\x05\x0f\x07\x04\x09\xf9\0\0\0\x10\x0b\x11\x03\x01\0\0\x02\x70\x01\x09\x08\
\x01\0\0\x11\xb5\0\0\0\x0b\x12\x16\x01\0\0\x02\x8a\x01\x09\x1b\x01\0\0\x0c\xe4\
\0\0\0\x0d\xb4\0\0\0\x0d\xe8\0\0\0\0\x0b\x13\x34\x01\0\0\x02\x68\x0c\x09\x39\
\x01\0\0\x12\x0d\xb4\0\0\0\x0d\xb5\0\0\0\0\x09\x3e\0\0\0\x13\x02\xe0\0\0\0\x01\
\x5a\x14\0\x25\x79\0\0\0\x14\0\x15\0\x25\x7d\x01\0\0\x15\x01\x24\0\x26\x16\x02\
\0\0\x15\x02\x25\0\x2c\x45\x01\0\0\x16\x28\0\x2b\xea\x01\0\0\0\x09\x82\x01\0\0\
\x17\x23\x14\x01\x9a\x82\x18\x16\xbb\x01\0\0\x01\x9b\x82\0\x18\x1d\xf2\x01\0\0\
\x01\x9c\x82\x08\x18\x1b\xfa\x01\0\0\x01\x9d\x82\x0c\x18\x21\xfa\x01\0\0\x01\
\x9e\x82\x10\x18\x22\x0a\x02\0\0\x01\x9f\x82\x14\0\x17\x1c\x08\x01\x6a\x21\x18\
\x07\xea\x01\0\0\x01\x6b\x21\0\x18\x18\xee\x01\0\0\x01\x6c\x21\x02\x18\x1a\xee\
\x01\0\0\x01\x6d\x21\x03\x18\x1b\x79\0\0\0\x01\x6e\x21\x04\0\x05\x17\x07\x02\
\x05\x19\x08\x01\x0f\xe8\0\0\0\x1e\x01\x22\x0f\x02\x02\0\0\x20\x01\x55\x0f\x79\
\0\0\0\x1f\x01\x31\x03\x3e\0\0\0\x04\x42\0\0\0\0\0\x09\x1b\x02\0\0\x19\x27\xc4\
\0\x06\x08\x1b\xf2\x01\0\0\0\x07\0\x08\x25\x3c\x02\0\0\0\x08\x04\x08\x26\x48\
\x02\0\0\0\x09\x84\0\x03\x3e\0\0\0\x04\x42\0\0\0\x80\0\x03\x3e\0\0\0\x04\x42\0\
\0\0\x40\0\0\xa8\0\0\0\x05\0\0\0\0\0\0\0\x15\0\0\0\x20\0\0\0\x54\0\0\0\x5d\0\0\
\0\x62\0\0\0\x76\0\0\0\x7d\0\0\0\x82\0\0\0\x86\0\0\0\x92\0\0\0\xa6\0\0\0\xb9\0\
\0\0\xbf\0\0\0\xd5\0\0\0\xda\0\0\0\xe7\0\0\0\xed\0\0\0\x06\x01\0\0\x1b\x01\0\0\
\x2e\x01\0\0\x3e\x01\0\0\x42\x01\0\0\x46\x01\0\0\x55\x01\0\0\x5b\x01\0\0\x69\
\x01\0\0\x77\x01\0\0\x7b\x01\0\0\x87\x01\0\0\x9b\x01\0\0\x9f\x01\0\0\xae\x01\0\
\0\xb4\x01\0\0\xbc\x01\0\0\xc3\x01\0\0\xe6\x01\0\0\xe8\x01\0\0\xf1\x01\0\0\xf9\
\x01\0\0\xff\x01\0\0\x63\x6c\x61\x6e\x67\x20\x76\x65\x72\x73\x69\x6f\x6e\x20\
\x31\x35\x2e\x30\x2e\x37\0\x6d\x61\x69\x6e\x2e\x62\x70\x66\x2e\x63\0\x2f\x68\
\x6f\x6d\x65\x2f\x7a\x66\x61\x6e\x65\x2f\x43\x4c\x69\x6f\x6e\x50\x72\x6f\x6a\
\x65\x63\x74\x73\x2f\x75\x6e\x74\x69\x74\x6c\x65\x64\x31\x2f\x65\x62\x70\x66\
\x5f\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\
\0\x63\x68\x61\x72\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\
\x59\x50\x45\x5f\x5f\0\x65\x76\x65\x6e\x74\x73\0\x74\x79\x70\x65\0\x69\x6e\x74\
\0\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x62\x70\x66\x5f\x72\x69\x6e\
\x67\x62\x75\x66\x5f\x72\x65\x73\x65\x72\x76\x65\0\x75\x6e\x73\x69\x67\x6e\x65\
\x64\x20\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x5f\x5f\x75\x36\x34\0\x62\x70\
\x66\x5f\x70\x72\x6f\x62\x65\x5f\x72\x65\x61\x64\x5f\x6b\x65\x72\x6e\x65\x6c\0\
\x6c\x6f\x6e\x67\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x5f\x5f\
\x75\x33\x32\0\x62\x70\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\x72\x65\x6e\x74\x5f\
\x70\x69\x64\x5f\x74\x67\x69\x64\0\x62\x70\x66\x5f\x67\x65\x74\x5f\x63\x75\x72\
\x72\x65\x6e\x74\x5f\x63\x6f\x6d\x6d\0\x62\x70\x66\x5f\x72\x69\x6e\x67\x62\x75\
\x66\x5f\x73\x75\x62\x6d\x69\x74\0\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x5f\
\x64\x65\x6d\x6f\0\x63\x74\x78\0\x65\x6e\x74\0\x75\x6e\x73\x69\x67\x6e\x65\x64\
\x20\x73\x68\x6f\x72\x74\0\x66\x6c\x61\x67\x73\0\x75\x6e\x73\x69\x67\x6e\x65\
\x64\x20\x63\x68\x61\x72\0\x70\x72\x65\x65\x6d\x70\x74\x5f\x63\x6f\x75\x6e\x74\
\0\x70\x69\x64\0\x74\x72\x61\x63\x65\x5f\x65\x6e\x74\x72\x79\0\x5f\x5f\x64\x61\
\x74\x61\x5f\x6c\x6f\x63\x5f\x66\x69\x6c\x65\x6e\x61\x6d\x65\0\x75\x33\x32\0\
\x5f\x5f\x6b\x65\x72\x6e\x65\x6c\x5f\x70\x69\x64\x5f\x74\0\x70\x69\x64\x5f\x74\
\0\x6f\x6c\x64\x5f\x70\x69\x64\0\x5f\x5f\x64\x61\x74\x61\0\x74\x72\x61\x63\x65\
\x5f\x65\x76\x65\x6e\x74\x5f\x72\x61\x77\x5f\x73\x63\x68\x65\x64\x5f\x70\x72\
\x6f\x63\x65\x73\x73\x5f\x65\x78\x65\x63\0\x65\0\x66\x69\x6c\x65\x6e\x61\x6d\
\x65\0\x63\x6f\x6d\x6d\x61\x6e\x64\0\x65\x76\x65\x6e\x74\0\x66\x69\x6c\x65\x6e\
\x61\x6d\x65\x5f\x6f\x66\x66\x73\x65\x74\0\x1c\0\0\0\x05\0\x08\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\x2c\x02\
\0\0\x2c\x02\0\0\x3a\x03\0\0\0\0\0\0\0\0\0\x02\x03\0\0\0\x01\0\0\0\0\0\0\x01\
\x04\0\0\0\x20\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x1b\0\0\0\
\x05\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x02\x06\0\0\0\0\0\0\0\0\
\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\0\0\x04\0\0\0\0\0\x02\0\0\x04\x10\0\0\0\
\x19\0\0\0\x01\0\0\0\0\0\0\0\x1e\0\0\0\x05\0\0\0\x40\0\0\0\x2a\0\0\0\0\0\0\x0e\
\x07\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\x02\x0a\0\0\0\x31\0\0\0\x05\0\0\x04\x14\0\0\
\0\x54\0\0\0\x0b\0\0\0\0\0\0\0\x58\0\0\0\x0e\0\0\0\x40\0\0\0\x6c\0\0\0\x11\0\0\
\0\x60\0\0\0\x70\0\0\0\x11\0\0\0\x80\0\0\0\x78\0\0\0\x14\0\0\0\xa0\0\0\0\x7f\0\
\0\0\x04\0\0\x04\x08\0\0\0\x19\0\0\0\x0c\0\0\0\0\0\0\0\x8b\0\0\0\x0d\0\0\0\x10\
\0\0\0\x91\0\0\0\x0d\0\0\0\x18\0\0\0\x6c\0\0\0\x02\0\0\0\x20\0\0\0\x9f\0\0\0\0\
\0\0\x01\x02\0\0\0\x10\0\0\0\xae\0\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\0\xbc\0\0\0\
\0\0\0\x08\x0f\0\0\0\xc0\0\0\0\0\0\0\x08\x10\0\0\0\xc6\0\0\0\0\0\0\x01\x04\0\0\
\0\x20\0\0\0\xd3\0\0\0\0\0\0\x08\x12\0\0\0\xd9\0\0\0\0\0\0\x08\x02\0\0\0\xe8\0\
\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\x03\0\0\0\0\x13\0\0\0\x04\0\
\0\0\0\0\0\0\0\0\0\0\x01\0\0\x0d\x02\0\0\0\xed\0\0\0\x09\0\0\0\xf1\0\0\0\x01\0\
\0\x0c\x15\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x13\0\0\0\x04\0\0\0\x04\0\0\0\x23\
\x03\0\0\0\0\0\x0e\x17\0\0\0\x01\0\0\0\x2c\x03\0\0\x01\0\0\x0f\0\0\0\0\x08\0\0\
\0\0\0\0\0\x10\0\0\0\x32\x03\0\0\x01\0\0\x0f\0\0\0\0\x18\0\0\0\0\0\0\0\x04\0\0\
\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\
\x50\x45\x5f\x5f\0\x74\x79\x70\x65\0\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\
\x73\0\x65\x76\x65\x6e\x74\x73\0\x74\x72\x61\x63\x65\x5f\x65\x76\x65\x6e\x74\
\x5f\x72\x61\x77\x5f\x73\x63\x68\x65\x64\x5f\x70\x72\x6f\x63\x65\x73\x73\x5f\
\x65\x78\x65\x63\0\x65\x6e\x74\0\x5f\x5f\x64\x61\x74\x61\x5f\x6c\x6f\x63\x5f\
\x66\x69\x6c\x65\x6e\x61\x6d\x65\0\x70\x69\x64\0\x6f\x6c\x64\x5f\x70\x69\x64\0\
\x5f\x5f\x64\x61\x74\x61\0\x74\x72\x61\x63\x65\x5f\x65\x6e\x74\x72\x79\0\x66\
\x6c\x61\x67\x73\0\x70\x72\x65\x65\x6d\x70\x74\x5f\x63\x6f\x75\x6e\x74\0\x75\
\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\x74\0\x75\x6e\x73\x69\x67\x6e\
\x65\x64\x20\x63\x68\x61\x72\0\x75\x33\x32\0\x5f\x5f\x75\x33\x32\0\x75\x6e\x73\
\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x70\x69\x64\x5f\x74\0\x5f\x5f\x6b\x65\
\x72\x6e\x65\x6c\x5f\x70\x69\x64\x5f\x74\0\x63\x68\x61\x72\0\x63\x74\x78\0\x74\
\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x5f\x64\x65\x6d\x6f\0\x74\x72\x61\x63\x65\
\x70\x6f\x69\x6e\x74\x2f\x73\x63\x68\x65\x64\x2f\x73\x63\x68\x65\x64\x5f\x70\
\x72\x6f\x63\x65\x73\x73\x5f\x65\x78\x65\x63\0\x2f\x68\x6f\x6d\x65\x2f\x7a\x66\
\x61\x6e\x65\x2f\x43\x4c\x69\x6f\x6e\x50\x72\x6f\x6a\x65\x63\x74\x73\x2f\x75\
\x6e\x74\x69\x74\x6c\x65\x64\x31\x2f\x65\x62\x70\x66\x5f\x74\x72\x61\x63\x65\
\x70\x6f\x69\x6e\x74\x2f\x6d\x61\x69\x6e\x2e\x62\x70\x66\x2e\x63\0\x69\x6e\x74\
\x20\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x5f\x64\x65\x6d\x6f\x28\x73\x74\
\x72\x75\x63\x74\x20\x74\x72\x61\x63\x65\x5f\x65\x76\x65\x6e\x74\x5f\x72\x61\
\x77\x5f\x73\x63\x68\x65\x64\x5f\x70\x72\x6f\x63\x65\x73\x73\x5f\x65\x78\x65\
\x63\x20\x2a\x63\x74\x78\x29\x20\x7b\0\x20\x20\x20\x20\x65\x20\x3d\x20\x62\x70\
\x66\x5f\x72\x69\x6e\x67\x62\x75\x66\x5f\x72\x65\x73\x65\x72\x76\x65\x28\x26\
\x65\x76\x65\x6e\x74\x73\x2c\x20\x73\x69\x7a\x65\x6f\x66\x28\x2a\x65\x29\x2c\
\x20\x30\x29\x3b\0\x20\x20\x20\x20\x69\x66\x20\x28\x21\x65\x29\x20\x7b\0\x30\
\x3a\x31\0\x20\x20\x20\x20\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x73\x68\x6f\x72\
\x74\x20\x66\x69\x6c\x65\x6e\x61\x6d\x65\x5f\x6f\x66\x66\x73\x65\x74\x3d\x63\
\x74\x78\x2d\x3e\x5f\x5f\x64\x61\x74\x61\x5f\x6c\x6f\x63\x5f\x66\x69\x6c\x65\
\x6e\x61\x6d\x65\x3b\0\x20\x20\x20\x20\x63\x68\x61\x72\x20\x2a\x66\x69\x6c\x65\
\x6e\x61\x6d\x65\x3d\x28\x63\x68\x61\x72\x20\x2a\x29\x63\x74\x78\x20\x2b\x66\
\x69\x6c\x65\x6e\x61\x6d\x65\x5f\x6f\x66\x66\x73\x65\x74\x3b\0\x20\x20\x20\x20\
\x62\x70\x66\x5f\x63\x6f\x72\x65\x5f\x72\x65\x61\x64\x28\x26\x65\x2d\x3e\x66\
\x69\x6c\x65\x6e\x61\x6d\x65\x2c\x73\x69\x7a\x65\x6f\x66\x28\x65\x2d\x3e\x66\
\x69\x6c\x65\x6e\x61\x6d\x65\x29\x2c\x66\x69\x6c\x65\x6e\x61\x6d\x65\x29\x3b\0\
\x20\x20\x20\x20\x65\x2d\x3e\x70\x69\x64\x3d\x62\x70\x66\x5f\x67\x65\x74\x5f\
\x63\x75\x72\x72\x65\x6e\x74\x5f\x70\x69\x64\x5f\x74\x67\x69\x64\x28\x29\x20\
\x3e\x3e\x33\x32\x3b\0\x20\x20\x20\x20\x62\x70\x66\x5f\x67\x65\x74\x5f\x63\x75\
\x72\x72\x65\x6e\x74\x5f\x63\x6f\x6d\x6d\x28\x26\x65\x2d\x3e\x63\x6f\x6d\x6d\
\x61\x6e\x64\x2c\x73\x69\x7a\x65\x6f\x66\x28\x65\x2d\x3e\x63\x6f\x6d\x6d\x61\
\x6e\x64\x29\x29\x3b\0\x20\x20\x20\x20\x62\x70\x66\x5f\x72\x69\x6e\x67\x62\x75\
\x66\x5f\x73\x75\x62\x6d\x69\x74\x28\x65\x2c\x20\x30\x29\x3b\0\x7d\0\x5f\x6c\
\x69\x63\x65\x6e\x73\x65\0\x2e\x6d\x61\x70\x73\0\x6c\x69\x63\x65\x6e\x73\x65\0\
\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x14\0\0\0\x14\0\0\0\xdc\0\0\0\xf0\0\0\0\
\x1c\0\0\0\x08\0\0\0\x01\x01\0\0\x01\0\0\0\0\0\0\0\x16\0\0\0\x10\0\0\0\x01\x01\
\0\0\x0d\0\0\0\0\0\0\0\x25\x01\0\0\x64\x01\0\0\0\x94\0\0\x08\0\0\0\x25\x01\0\0\
\xaa\x01\0\0\x09\x9c\0\0\x38\0\0\0\x25\x01\0\0\xdf\x01\0\0\x09\xa0\0\0\x40\0\0\
\0\x25\x01\0\0\xf1\x01\0\0\x29\xac\0\0\x50\0\0\0\x25\x01\0\0\x2e\x02\0\0\x20\
\xb0\0\0\x58\0\0\0\x25\x01\0\0\x5f\x02\0\0\x05\xb8\0\0\x80\0\0\0\x25\x01\0\0\
\x9d\x02\0\0\x0c\xbc\0\0\x88\0\0\0\x25\x01\0\0\x9d\x02\0\0\x27\xbc\0\0\x90\0\0\
\0\x25\x01\0\0\x9d\x02\0\0\x0b\xbc\0\0\x98\0\0\0\x25\x01\0\0\xc9\x02\0\0\x1e\
\xc0\0\0\xa8\0\0\0\x25\x01\0\0\xc9\x02\0\0\x05\xc0\0\0\xb8\0\0\0\x25\x01\0\0\
\x03\x03\0\0\x05\xc4\0\0\xd0\0\0\0\x25\x01\0\0\x21\x03\0\0\x01\xd0\0\0\x10\0\0\
\0\x01\x01\0\0\x01\0\0\0\x40\0\0\0\x0a\0\0\0\xed\x01\0\0\0\0\0\0\x0c\0\0\0\xff\
\xff\xff\xff\x04\0\x08\0\x08\x7c\x0b\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe0\0\
\0\0\0\0\0\0\xb2\0\0\0\x05\0\x08\0\x69\0\0\0\x08\x01\x01\xfb\x0e\x0d\0\x01\x01\
\x01\x01\0\0\0\x01\0\0\x01\x01\x01\x1f\x03\0\0\0\0\x34\0\0\0\x36\0\0\0\x03\x01\
\x1f\x02\x0f\x05\x1e\x03\x47\0\0\0\0\x97\x8d\x2e\x2c\x45\x51\x4c\xfe\x70\x53\
\x88\x55\x07\x02\xad\x51\x52\0\0\0\x01\x0d\xc2\x2f\xeb\xd7\x13\x51\0\xdb\x2b\
\x2d\x68\x5e\x1d\xd0\xcc\x5c\0\0\0\x02\xba\0\x39\xf6\xac\xc4\x71\x0a\x5f\x43\
\x49\xe6\x28\xdd\xfb\x60\x04\0\0\x09\x02\0\0\0\0\0\0\0\0\x03\x24\x01\x05\x09\
\x0a\x22\x67\x05\x29\x23\x06\x03\x55\x20\x05\x20\x06\x03\x2c\x20\x05\x05\x22\
\x05\x0c\x59\x05\x27\x06\x20\x05\x0b\x20\x05\x1e\x06\x21\x05\x05\x06\x2e\x06\
\x2f\x05\x01\x3f\x02\x02\0\x01\x01\x2f\x68\x6f\x6d\x65\x2f\x7a\x66\x61\x6e\x65\
\x2f\x43\x4c\x69\x6f\x6e\x50\x72\x6f\x6a\x65\x63\x74\x73\x2f\x75\x6e\x74\x69\
\x74\x6c\x65\x64\x31\x2f\x65\x62\x70\x66\x5f\x74\x72\x61\x63\x65\x70\x6f\x69\
\x6e\x74\0\x2e\0\x2f\x75\x73\x72\x2f\x69\x6e\x63\x6c\x75\x64\x65\x2f\x62\x70\
\x66\0\x6d\x61\x69\x6e\x2e\x62\x70\x66\x2e\x63\0\x76\x6d\x6c\x69\x6e\x75\x78\
\x2e\x68\0\x62\x70\x66\x5f\x68\x65\x6c\x70\x65\x72\x5f\x64\x65\x66\x73\x2e\x68\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\x01\0\0\x04\0\
\xf1\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x25\x01\0\0\0\0\x03\0\xd0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x03\0\x07\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x08\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x03\0\x0d\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0e\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x14\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x03\0\x16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x18\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x81\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\xe0\0\0\0\0\0\0\0\x32\
\0\0\0\x11\0\x05\0\0\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xaf\0\0\0\x11\0\x06\0\0\0\
\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\x01\0\0\0\x0d\0\0\0\x08\0\0\0\
\0\0\0\0\x03\0\0\0\x05\0\0\0\x11\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x15\0\0\0\0\
\0\0\0\x03\0\0\0\x0a\0\0\0\x1f\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x23\0\0\0\0\0\
\0\0\x03\0\0\0\x04\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x0c\0\0\0\0\0\0\
\0\x03\0\0\0\x07\0\0\0\x10\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x14\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x18\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x1c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x20\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x24\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x28\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x2c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x30\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x34\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x38\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x3c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x40\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x44\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x48\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x4c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x50\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x54\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x58\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x5c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x64\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x68\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x6c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x70\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x74\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x78\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x7c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x80\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x84\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x88\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x8c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x90\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x94\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x98\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x9c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\xa0\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\xa4\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\xa8\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x08\0\0\0\0\0\0\0\
\x02\0\0\0\x0e\0\0\0\x10\0\0\0\0\0\0\0\x02\0\0\0\x0d\0\0\0\x18\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x24\x02\0\0\0\0\0\0\x04\0\0\0\x0d\0\0\0\x3c\x02\0\0\0\0\0\
\0\x04\0\0\0\x0e\0\0\0\x2c\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x40\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x50\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x60\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x70\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x80\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x90\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xa0\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xb0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xc0\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xd0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\xe0\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xf0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\0\x01\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x1c\x01\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x14\0\0\0\0\0\0\0\
\x03\0\0\0\x09\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x22\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x26\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x2a\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x36\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x4b\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x7a\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x0c\x0d\x0e\0\x2e\x64\x65\x62\x75\x67\x5f\x61\x62\x62\x72\
\x65\x76\0\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\
\x74\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x6f\x63\x6c\x69\x73\x74\x73\0\x65\x76\
\x65\x6e\x74\x73\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\x5f\
\x6f\x66\x66\x73\x65\x74\x73\0\x2e\x6d\x61\x70\x73\0\x2e\x64\x65\x62\x75\x67\
\x5f\x73\x74\x72\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\x5f\x73\x74\x72\
\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x61\x64\x64\x72\0\x74\x72\x61\
\x63\x65\x70\x6f\x69\x6e\x74\x5f\x64\x65\x6d\x6f\0\x2e\x72\x65\x6c\x2e\x64\x65\
\x62\x75\x67\x5f\x69\x6e\x66\x6f\0\x2e\x6c\x6c\x76\x6d\x5f\x61\x64\x64\x72\x73\
\x69\x67\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\
\x75\x67\x5f\x6c\x69\x6e\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x66\
\x72\x61\x6d\x65\0\x2e\x72\x65\x6c\x74\x72\x61\x63\x65\x70\x6f\x69\x6e\x74\x2f\
\x73\x63\x68\x65\x64\x2f\x73\x63\x68\x65\x64\x5f\x70\x72\x6f\x63\x65\x73\x73\
\x5f\x65\x78\x65\x63\0\x6d\x61\x69\x6e\x2e\x62\x70\x66\x2e\x63\0\x2e\x73\x74\
\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x65\x6c\x2e\x42\x54\
\x46\0\x4c\x42\x42\x30\x5f\x32\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x0c\x01\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xeb\x15\0\0\0\0\0\
\0\x2c\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\
\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xdd\0\0\0\x01\0\0\0\x06\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\xe0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd9\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x28\x11\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x1a\0\0\0\x03\0\0\0\x08\0\
\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x50\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x20\x01\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\xb0\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x30\x01\
\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x22\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x34\x01\0\0\0\0\0\0\x31\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x01\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x65\x01\0\0\0\0\0\0\x2d\x01\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x95\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x92\x02\0\0\0\0\0\0\x55\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x91\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x38\x11\0\0\0\0\0\0\x50\0\0\0\0\0\0\0\x1a\0\0\0\x09\0\0\0\x08\0\0\
\0\0\0\0\0\x10\0\0\0\0\0\0\0\x3d\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\xe7\x04\0\0\0\0\0\0\xac\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x39\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x88\x11\0\0\
\0\0\0\0\x90\x02\0\0\0\0\0\0\x1a\0\0\0\x0b\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\
\0\0\0\x56\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x93\x05\0\0\0\0\0\
\0\x0f\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x75\
\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xa2\x07\0\0\0\0\0\0\x20\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x71\0\0\0\x09\0\0\0\
\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x14\0\0\0\0\0\0\x30\0\0\0\0\0\0\0\x1a\0\
\0\0\x0e\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x20\x01\0\0\x01\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\xc4\x07\0\0\0\0\0\0\x7e\x05\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1c\x01\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\x48\x14\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x1a\0\0\0\x10\0\0\0\x08\
\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\x44\x0d\0\0\0\0\0\0\x2c\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x15\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x68\
\x14\0\0\0\0\0\0\xf0\0\0\0\0\0\0\0\x1a\0\0\0\x12\0\0\0\x08\0\0\0\0\0\0\0\x10\0\
\0\0\0\0\0\0\xcc\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x70\x0e\0\0\0\
\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xc8\
\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x58\x15\0\0\0\0\0\0\x20\0\0\
\0\0\0\0\0\x1a\0\0\0\x14\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xbc\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x98\x0e\0\0\0\0\0\0\xb6\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb8\0\0\0\x09\0\0\0\x40\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x78\x15\0\0\0\0\0\0\x70\0\0\0\0\0\0\0\x1a\0\0\0\
\x16\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x61\0\0\0\x01\0\0\0\x30\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x4e\x0f\0\0\0\0\0\0\x6e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\xa1\0\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\
\0\0\0\0\0\0\0\0\0\xe8\x15\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\x1a\0\0\0\0\0\0\0\x01\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x14\x01\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\xc0\x0f\0\0\0\0\0\0\x68\x01\0\0\0\0\0\0\x01\0\0\0\x0c\0\0\0\x08\0\0\0\0\
\0\0\0\x18\0\0\0\0\0\0\0";
}

#ifdef __cplusplus
struct main_bpf *main_bpf::open(const struct bpf_object_open_opts *opts) { return main_bpf__open_opts(opts); }
struct main_bpf *main_bpf::open_and_load() { return main_bpf__open_and_load(); }
int main_bpf::load(struct main_bpf *skel) { return main_bpf__load(skel); }
int main_bpf::attach(struct main_bpf *skel) { return main_bpf__attach(skel); }
void main_bpf::detach(struct main_bpf *skel) { main_bpf__detach(skel); }
void main_bpf::destroy(struct main_bpf *skel) { main_bpf__destroy(skel); }
const void *main_bpf::elf_bytes(size_t *sz) { return main_bpf__elf_bytes(sz); }
#endif /* __cplusplus */

__attribute__((unused)) static void
main_bpf__assert(struct main_bpf *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif /* __MAIN_BPF_SKEL_H__ */
